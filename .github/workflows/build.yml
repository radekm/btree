on: [push]

jobs:
  build-and-test-in-bash:
    strategy:
      # Continue build even if some platforms fail.
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            arch: arm64
          - os: ubuntu-latest
            arch: x64
          - os: windows-latest
            arch: x64
    runs-on: ${{ matrix.os }}
    name: Build and test in Bash
    steps:
      - name: Ensure same LF line endings on all platforms
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      - uses: actions/checkout@v4
      - uses: radekm/setup-c3@v2
        with:
          version: v0.7.5
      - shell: bash
        run: |
          ./build.sh

          ls -l build

          time ./test.sh
  build-and-test-in-cmd:
    strategy:
      matrix:
        include:
          - os: windows-latest
            arch: x64
    runs-on: ${{ matrix.os }}
    name: Build and test in cmd
    steps:
      - name: Ensure same LF line endings on all platforms
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      - uses: actions/checkout@v4
      - uses: radekm/setup-c3@v2
        with:
          version: v0.7.5
      - shell: cmd
        run: |
          md build
          cd build

          c3c compile --libdir .. --lib btree ..\examples\basics.c3 -o basics
          c3c compile --libdir .. --lib btree ..\examples\primitives.c3 -o primitives

          dir
  benchmark:
    strategy:
      # Continue benchmark even if some platforms fail.
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            arch: arm64
          - os: ubuntu-latest
            arch: x64
          - os: windows-latest
            arch: x64
    runs-on: ${{ matrix.os }}
    name: Benchmark
    steps:
      - name: Ensure same LF line endings on all platforms
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      - uses: actions/checkout@v4
      - uses: radekm/setup-c3@v2
        with:
          version: v0.7.5
      # Since `link.exe` is shadowed by GNU link we have to delete GNU link otherwise Rust benchmark won't link.
      - name: Prevent conflict of GNU link with Microsoft's linker
        if: runner.os == 'Windows' && runner.arch == 'X64'
        shell: bash
        run: rm /usr/bin/link.exe
      - shell: bash
        run: |
          # Redirect standard error to standard output otherwise they strangely interleave when running on Windows.
          exec 2>&1

          ./compile-benchmarks.sh

          echo "Benchmarking C3"
          time ./build/bench-c3
          time ./build/bench-c3

          echo "Benchmarking Rust"
          time ./build/bench-rust
          time ./build/bench-rust

          echo "Benchmarking C3 (HashMap)"
          time ./build/bench_hash_map-c3
          time ./build/bench_hash_map-c3

          echo "Benchmarking insertion and iteration C3"
          time ./build/insert_iter_bench-c3
          time ./build/insert_iter_bench-c3

          echo "Benchmarking insertion and iteration Rust"
          time ./build/insert_iter_bench-rust
          time ./build/insert_iter_bench-rust
